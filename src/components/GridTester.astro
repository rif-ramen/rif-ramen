<grid-tester class="grid-tester">
  <div class="grid-overlay">
    <div class="inner container site-grid">
      <div class="col"></div>
      <div class="col"></div>
      <div class="col"></div>
      <div class="col"></div>
      <div class="col"></div>
      <div class="col"></div>
      <div class="col"></div>
      <div class="col"></div>
      <div class="col"></div>
      <div class="col"></div>
      <div class="col"></div>
      <div class="col"></div>
    </div>
  </div>
  <button class="toggle">Grid</button>
</grid-tester>

<style lang="postcss">
    .grid-tester {
        &.active {
            .toggle {
                @apply bg-energy;
            }
            .grid-overlay {
                @apply opacity-10;
            }
        }
    }
    .toggle {
        @apply bg-cloud fixed bottom-4 left-4 z-50 p-4 leading-none;
    }
    .grid-overlay {
        @apply fixed top-0 left-0 w-full h-full opacity-0 pointer-events-none z-50;
        .inner {
            @apply h-full;
            .col {
                @apply bg-shore h-full;
            }
        }
    }
</style>

<script>
  class GridTester extends HTMLElement {
    isVisible: boolean;
    toggleEl: HTMLElement;
    gridOverlayEl: HTMLElement;

    connectedCallback() {
      this.isVisible = false;
      this.toggleEl = this.querySelector(".toggle") as HTMLElement;
      this.gridOverlayEl = this.querySelector(".grid-overlay") as HTMLElement;

      this.toggleEl.onclick = this.onToggleVisible.bind(this);
    }

    onToggleVisible() {
      this.isVisible = !this.isVisible;

      this.classList.toggle("active");
    }
  }

  customElements.define("grid-tester", GridTester);
</script>
